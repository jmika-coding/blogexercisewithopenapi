openapi: 3.0.0
info:
  title: Blog exercise
  version: 1.0.0
servers:
  - url: localhost:${HTTP_PORT}
paths:
  /posts:
    get:
      tags:
        - posts
      operationId: listAllPosts
      responses:
        '200':
          description: Get list of all posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseGetPost'

    post:
      tags:
        - posts
      operationId: createOnePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePostRequest'
        required: true
      responses:
        '201':
          description: Create one post
        '400':
          description: Error while creating a post

  /posts/{id}:
    patch:
      tags:
        - posts
      operationId: updateOnePost
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePatchRequest'
      responses:
        '204':
          description: Update one post
        '404':
          description: Invalid type or parameter send in body

    delete:
      tags:
        - posts
      operationId: deleteOnePost
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      responses:
        '204':
          description: Delete one post
        '404':
          description: Invalid type or parameter send in body

  /comments:
    get:
      tags:
        - comments
      operationId: listAllCommentsForAPost
      parameters:
        - name: postId
          in: query
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Get list of all comments for a post
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseGetComment'

    post:
      tags:
        - comments
      operationId: createOneComment
      parameters:
        - name: postId
          in: query
          required: true
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCommentRequest'
        required: true
      responses:
        '201':
          description: Create one comment for a post
        '400':
          description: Error while creating a comment for a post

  /comments/{id}:
    patch:
      tags:
        - comments
      operationId: updateOneComment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCommentRequest'
        required: true
      responses:
        '204':
          description: Update one comment for a post
        '404':
          description: Invalid type or parameter send in body

    delete:
      tags:
        - comments
      operationId: deleteOneComment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      responses:
        '204':
          description: Delete one comment for a post
        '404':
          description: Invalid type or parameter send in body

components:
  schemas:
    CreatePostRequest:
      type: object
      required:
        - post
        - title
        - likes
      properties:
        id:
          type: number
        title:
          type: string
        post:
          type: string
        likes:
          type: number

    CreatePatchRequest:
      type: object
      properties:
        id:
          type: number
        title:
          type: string
        post:
          type: string
        likes:
          type: number

    ResponseGetPost:
      type: object
      properties:
        title:
          type: string
        post:
          type: string
        likes:
          type: number

    CreateCommentRequest:
      type: object
      required:
        - comment
      properties:
        id:
          type: number
        comment:
          type: string

    UpdateCommentRequest:
      type: object
      properties:
        comment:
          type: string

    ResponseGetComment:
      type: object
      properties:
        comment:
          type: string
